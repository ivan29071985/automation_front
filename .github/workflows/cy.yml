name: Cypress Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  # Permite execução manual a partir da aba Actions no GitHub
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente para executar os testes'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - homologacao
          - producao

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    strategy:
      # Quando um teste falha, os outros continuam executando ok
      fail-fast: false
      matrix:
        # Executa em Chrome
        browsers: [chrome]
        
    steps:
      - name: Checkout código
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm ci
        
      - name: Verificar cypress
        run: npx cypress verify
          
      - name: Executar testes Cypress
        uses: cypress-io/github-action@v5
        with:
          browser: ${{ matrix.browsers }}
          command: npm run cypress:run:${{ github.event.inputs.environment || 'staging' }}:allure
        env:
          CYPRESS_DEFAULT_COMMAND_TIMEOUT: 60000
          CYPRESS_DEFAULT_TIMEOUT: 60000
          CYPRESS_REQUESTTIMEOUT: 60000
          CYPRESS_RESPONSETIMEROUT: 60000
          CYPRESS_PAGELOADTIMEOUT: 90000
          CYPRESS_RETRIES: 3
               
      - name: Armazenar screenshots em caso de falha
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.browsers }}
          path: cypress/screenshots
          retention-days: 7